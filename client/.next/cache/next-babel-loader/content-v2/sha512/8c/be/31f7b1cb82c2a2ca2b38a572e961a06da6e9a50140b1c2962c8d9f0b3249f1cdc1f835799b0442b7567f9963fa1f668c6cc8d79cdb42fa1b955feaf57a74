{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/hooks/use-request.js\";\nimport axios from 'axios';\nimport React, { useState } from 'react';\nexport default (({\n  url,\n  method,\n  body,\n  onSuccess\n}) => {\n  let {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n\n  async function doRequest() {\n    try {\n      setErrors(null);\n      let response = await axios[method](url, body);\n\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      let validationErrors = error.response.data && error.response.data.errors || [];\n      setErrors( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Validation Errors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"\",\n          children: validationErrors.map(err => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: err.message\n            }, err.message, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this));\n    }\n  }\n\n  return {\n    doRequest,\n    errors\n  };\n});","map":{"version":3,"sources":["/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/hooks/use-request.js"],"names":["axios","React","useState","url","method","body","onSuccess","errors","setErrors","doRequest","response","data","error","console","log","validationErrors","map","err","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,gBAAe,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KAAsC;AACpD,MAAI;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,IAAD,CAAlC;;AAEA,iBAAeO,SAAf,GAA4B;AAC3B,QAAI;AACHD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAIE,QAAQ,GAAG,MAAMV,KAAK,CAACI,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAArB;;AAEA,UAAIC,SAAJ,EAAe;AACdA,QAAAA,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT;AACA;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AACA,KARD,CAQE,OAAOC,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAIG,gBAAgB,GAAIH,KAAK,CAACF,QAAN,CAAeC,IAAf,IAAuBC,KAAK,CAACF,QAAN,CAAeC,IAAf,CAAoBJ,MAA5C,IAAuD,EAA9E;AACAC,MAAAA,SAAS,eACR;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAI,UAAA,SAAS,EAAC,EAAd;AAAA,oBACEO,gBAAgB,CAACC,GAAjB,CAAsBC,GAAD,IAAS;AAC9B,gCAAO;AAAA,wBAAuBA,GAAG,CAACC;AAA3B,eAASD,GAAG,CAACC,OAAb;AAAA;AAAA;AAAA;AAAA,oBAAP;AACA,WAFA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,CAAT;AAUA;AACD;;AAED,SAAO;AACNT,IAAAA,SADM;AAENF,IAAAA;AAFM,GAAP;AAIA,CAhCD","sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\n\nexport default ({ url, method, body, onSuccess }) => {\n\tlet [errors, setErrors] = useState(null);\n\n\tasync function doRequest () {\n\t\ttry {\n\t\t\tsetErrors(null);\n\t\t\tlet response = await axios[method](url, body);\n\n\t\t\tif (onSuccess) {\n\t\t\t\tonSuccess(response.data);\n\t\t\t}\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tlet validationErrors = (error.response.data && error.response.data.errors) || [];\n\t\t\tsetErrors(\n\t\t\t\t<div className=\"alert alert-danger\">\n\t\t\t\t\t<h5>Validation Errors</h5>\n\t\t\t\t\t<ul className=\"\">\n\t\t\t\t\t\t{validationErrors.map((err) => {\n\t\t\t\t\t\t\treturn <li key={err.message}>{err.message}</li>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\n\treturn {\n\t\tdoRequest,\n\t\terrors\n\t};\n}"]},"metadata":{},"sourceType":"module"}