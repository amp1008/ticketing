{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/pages/index.js\";\nimport axios from 'axios';\n\nfunction LandingPage(_ref) {\n  var user = _ref.user;\n  console.log('user', user);\n  return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"p-3\",\n    children: \"User is logged In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LandingPage;\n\nLandingPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, data, response, _response;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n            _context.prev = 1;\n            data = {};\n\n            if (!false) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 6;\n            return axios.get(\"http://ingress-nginx-controller.ingress-nginx.svc.cluster.local/api/users/current-user\", {\n              headers: req.headers\n            });\n\n          case 6:\n            response = _context.sent;\n            console.log(response);\n            data = response.data || {};\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return axios.get('/api/users/current-user');\n\n          case 13:\n            _response = _context.sent;\n            data = _response.data || {};\n\n          case 15:\n            return _context.abrupt(\"return\", data);\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](1);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", {});\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 18]]);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default LandingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandingPage\");","map":{"version":3,"sources":["/Users/ashish/Documents/Learning/Node/UdemyNodeCourse/microservice/ticketing/client/pages/index.js"],"names":["axios","LandingPage","user","console","log","getInitialProps","req","data","get","headers","response","error"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,OAAgC;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,sBAAO;AAAI,IAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA;;KAHQD,W;;AAKTA,WAAW,CAACI,eAAZ;AAAA,uEAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AAAA;AAExBC,YAAAA,IAFwB,GAEjB,EAFiB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAINP,KAAK,CAACQ,GAAN,2FAAoG;AACxHC,cAAAA,OAAO,EAAEH,GAAG,CAACG;AAD2G,aAApG,CAJM;;AAAA;AAIvBC,YAAAA,QAJuB;AAO3BP,YAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACAH,YAAAA,IAAI,GAAGG,QAAQ,CAACH,IAAT,IAAiB,EAAxB;AAR2B;AAAA;;AAAA;AAAA;AAAA,mBAUNP,KAAK,CAACQ,GAAN,CAAU,yBAAV,CAVM;;AAAA;AAUvBE,YAAAA,SAVuB;AAW3BH,YAAAA,IAAI,GAAGG,SAAQ,CAACH,IAAT,IAAiB,EAAxB;;AAX2B;AAAA,6CAarBA,IAbqB;;AAAA;AAAA;AAAA;AAe5BJ,YAAAA,OAAO,CAACQ,KAAR;AAf4B,6CAgBrB,EAhBqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAeV,WAAf","sourcesContent":["import axios from 'axios';\n\nfunction LandingPage ({ user }) {\n\tconsole.log('user', user);\n\treturn <h3 className=\"p-3\">User is logged In</h3>;\n}\n\nLandingPage.getInitialProps = async ({ req }) => {\n\ttry {\n\t\tlet data = {};\n\t\tif (typeof window === 'undefined') {\n\t\t\tlet response = await axios.get(`http://ingress-nginx-controller.ingress-nginx.svc.cluster.local/api/users/current-user`, {\n\t\t\t\theaders: req.headers\n\t\t\t});\n\t\t\tconsole.log(response);\n\t\t\tdata = response.data || {};\n\t\t} else {\n\t\t\tlet response = await axios.get('/api/users/current-user');\n\t\t\tdata = response.data || {};\n\t\t}\n\t\treturn data;\n\t} catch (error) {\n\t\tconsole.error(error);\n\t\treturn {};\n\t}\n};\n\nexport default LandingPage;"]},"metadata":{},"sourceType":"module"}